{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/product/create/create.component.html","webpack:///./src/app/product/edit/edit.component.html","webpack:///./src/app/product/list/list.component.html","webpack:///./src/app/product/view/view.component.html","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/_helpers/auth.guard.ts","webpack:///./src/app/_helpers/error.interceptor.ts","webpack:///./src/app/_helpers/index.ts","webpack:///./src/app/_helpers/jwt.interceptor.ts","webpack:///./src/app/_services/authentication.service.ts","webpack:///./src/app/_services/index.ts","webpack:///./src/app/_services/product.service.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/login/index.ts","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/product/create/create.component.ts","webpack:///./src/app/product/create/index.ts","webpack:///./src/app/product/edit/edit.component.ts","webpack:///./src/app/product/edit/index.ts","webpack:///./src/app/product/index.ts","webpack:///./src/app/product/list/index.ts","webpack:///./src/app/product/list/list.component.ts","webpack:///./src/app/product/view/index.ts","webpack:///./src/app/product/view/view.component.ts","webpack:///./src/app/signup/index.ts","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!-- nav -->\\n<nav class=\\\"navbar navbar-expand navbar-dark bg-dark\\\" *ngIf=\\\"currentUser\\\">\\n    <div class=\\\"navbar-nav\\\">\\n        <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/\\\">Home</a>\\n        <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/createProduct\\\">create</a>\\n        <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/listProducts\\\">list</a>\\n        <a class=\\\"nav-item nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n    </div>\\n</nav>\\n<nav class=\\\"navbar navbar-expand navbar-dark bg-dark\\\" *ngIf=\\\"!currentUser\\\">\\n    <div class=\\\"navbar-nav\\\">\\n        <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/signup\\\">signup</a>\\n    </div>\\n</nav>\\n\\n<!-- main app container -->\\n<div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\\n\"","module.exports = \"<div class=\\\"col-md-6 offset-md-3 mt-5\\\">\\n    <div class=\\\"card\\\">\\n        <h4 class=\\\"card-header\\\">login</h4>\\n        <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"username\\\">Username</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"password\\\">Password</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                    </div>\\n                </div>\\n                <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n                    <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                    Login\\n                </button>\\n\\n              <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/signup\\\">dont have account? Signup.</a>\\n\\n              <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger mt-3 mb-0\\\">{{error}}</div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"col-md-6 offset-md-3 mt-5\\\">\\n  <div class=\\\"card\\\">\\n    <h4 class=\\\"card-header\\\">Create Product</h4>\\n    <div class=\\\"card-body\\\">\\n      <form [formGroup]=\\\"productForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Name</label>\\n          <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" />\\n          <div *ngIf=\\\"submitted && f.name.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.name.errors.required\\\">Name is required</div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"description\\\">description</label>\\n          <input type=\\\"text\\\" formControlName=\\\"description\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.description.errors }\\\" />\\n          <div *ngIf=\\\"submitted && f.description.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.description.errors.required\\\">description is required</div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"type\\\">type</label>\\n          <input type=\\\"text\\\" formControlName=\\\"type\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.type.errors }\\\" />\\n          <div *ngIf=\\\"submitted && f.type.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.type.errors.required\\\">type is required</div>\\n          </div>\\n        </div>\\n\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"price\\\">price</label>\\n          <input type=\\\"text\\\" formControlName=\\\"price\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.price.errors }\\\" />\\n          <div *ngIf=\\\"submitted && f.price.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.price.errors.required\\\">price is required</div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"status\\\">status</label>\\n          <select type=\\\"text\\\" formControlName=\\\"status\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.status.errors }\\\" >\\n            <option value=\\\"0\\\">false</option>\\n            <option value=\\\"1\\\">true</option>\\n\\n          </select>\\n          <div *ngIf=\\\"submitted && f.status.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.status.errors.required\\\">status is required</div>\\n          </div>\\n        </div>\\n        <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n          <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n          Create\\n        </button>\\n\\n\\n        <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger mt-3 mb-0\\\">{{error}}</div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"col-md-6 offset-md-3 mt-5\\\">\\n  <div class=\\\"card\\\">\\n    <h4 class=\\\"card-header\\\">Update Product</h4>\\n    <div class=\\\"card-body\\\">\\n      <form [formGroup]=\\\"productForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Name</label>\\n          <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" />\\n          <div *ngIf=\\\"submitted && f.name.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.name.errors.required\\\">Name is required</div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"description\\\">description</label>\\n          <input type=\\\"text\\\" formControlName=\\\"description\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.description.errors }\\\" />\\n          <div *ngIf=\\\"submitted && f.description.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.description.errors.required\\\">description is required</div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"type\\\">type</label>\\n          <input type=\\\"text\\\" formControlName=\\\"type\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.type.errors }\\\" />\\n          <div *ngIf=\\\"submitted && f.type.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.type.errors.required\\\">type is required</div>\\n          </div>\\n        </div>\\n\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"price\\\">price</label>\\n          <input type=\\\"text\\\" formControlName=\\\"price\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.price.errors }\\\" />\\n          <div *ngIf=\\\"submitted && f.price.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.price.errors.required\\\">price is required</div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"status\\\">status</label>\\n          <select type=\\\"text\\\" formControlName=\\\"status\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.status.errors }\\\" >\\n            <option value=\\\"0\\\">false</option>\\n            <option value=\\\"1\\\">true</option>\\n\\n          </select>\\n          <div *ngIf=\\\"submitted && f.status.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.status.errors.required\\\">status is required</div>\\n          </div>\\n        </div>\\n        <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n          <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n          Create\\n        </button>\\n\\n\\n        <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger mt-3 mb-0\\\">{{error}}</div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"card mt-4\\\">\\n    <h4 class=\\\"card-header\\\">product list</h4>\\n    <div class=\\\"card-body\\\">\\n        <div *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm\\\"></div>\\n        <div *ngIf=\\\"products\\\">\\n          <div class=\\\"row\\\">\\n\\n            <div  class=\\\"col-md-2\\\">\\n              Id\\n            </div>\\n            <div  class=\\\"col-md-2\\\">\\n              Name\\n            </div>\\n            <div  class=\\\"col-md-2\\\">\\n              Price\\n            </div>\\n\\n            <div  class=\\\"col-md-2\\\">\\n              Actions\\n            </div>\\n\\n          </div>\\n                    <div *ngFor=\\\"let product of products\\\" class=\\\"row\\\">\\n\\n            <div  class=\\\"col-md-2\\\">\\n              {{product.id}}\\n            </div>\\n            <div  class=\\\"col-md-2\\\">\\n              {{product.name}}\\n            </div>\\n            <div  class=\\\"col-md-2\\\">\\n              {{product.price}}\\n            </div>\\n                      <div  class=\\\"col-md-2\\\">\\n              <button (click)=\\\"deleteProduct(product.id)\\\">delete</button>\\n              <button (click)=\\\"editProduct(product.id)\\\">edit</button>\\n              <button (click)=\\\"viewProduct(product.id)\\\">viewProduct</button>\\n            </div>\\n\\n\\n          </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"card mt-4\\\">\\n    <h4 class=\\\"card-header\\\">product list</h4>\\n    <div class=\\\"card-body\\\">\\n        <div *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm\\\"></div>\\n        <div *ngIf=\\\"product\\\">\\n          <div class=\\\"row\\\">\\n\\n            <div  class=\\\"col-md-6\\\">\\n              Id :               {{product.id}}\\n\\n            </div>\\n            <div  class=\\\"col-md-6\\\">\\n              Name :               {{product.name}}\\n\\n            </div>\\n            <div  class=\\\"col-md-6\\\">\\n              Price :               {{product.price}}\\n\\n            </div>\\n\\n          </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"col-md-6 offset-md-3 mt-5\\\">\\n    <div class=\\\"card\\\">\\n        <h4 class=\\\"card-header\\\">Signup</h4>\\n        <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"username\\\">Username</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n                    </div>\\n                </div>                <div class=\\\"form-group\\\">\\n                    <label for=\\\"email\\\">Email</label>\\n                    <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"password\\\">Password</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                    </div>\\n                </div>\\n                <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n                    <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                    Signup\\n                </button>\\n              <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/login\\\"> have account? login.</a>\\n\\n              <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger mt-3 mb-0\\\">{{error}}</div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // logged in so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","export * from './auth.guard';\nexport * from './error.interceptor';\nexport * from './jwt.interceptor';\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        let currentUser = this.authenticationService.currentUserValue;\n        if (currentUser && currentUser.accessToken) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${currentUser.accessToken}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '@environments/environment';\nimport { User } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private currentUserSubject: BehaviorSubject<User>;\n    public currentUser: Observable<User>;\n\n    constructor(private http: HttpClient) {\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue(): User {\n        return this.currentUserSubject.value;\n    }\n\n    login(username: string, password: string) {\n        return this.http.post<any>(`${environment.apiUrl}/api/auth/signin`, { username, password })\n            .pipe(map(user => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                this.currentUserSubject.next(user);\n                return user;\n            }));\n    }\n\n  signup(username: string,email: string, password: string) {\n    return this.http.post<any>(`${environment.apiUrl}/api/auth/signup`, { email,username, password }) .pipe(map(user => {\n      return user;\n    }));\n\n  }\n\n\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    }\n}\n","export * from './authentication.service';\nexport * from './product.service';\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from '@environments/environment';\nimport { Product } from '@app/_models';\nimport {map} from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class ProductService {\n    constructor(private http: HttpClient) { }\n\n    url = environment.apiUrl + '/api/products';\n    getAll() {\n        return this.http.get<Product[]>(this.url);\n    }\n\n\n\n  create(obj) {\n    return this.http.post<any>(this.url, obj) .pipe(map(user => {\n      return user;\n    }));\n\n  }\n\n  update(id, obj) {\n    return this.http.put<any>(this.url +\"/\" + id, obj) .pipe(map(user => {\n      return user;\n    }));\n\n  }\n\n  delete(id) {\n    return this.http.delete<any>(this.url +\"/\" + id) .pipe(map(user => {\n      return user;\n    }));\n\n  }\n\n  get(id) {\n    return this.http.get<any>(this.url +\"/\" + id) .pipe(map(user => {\n      return user;\n    }));\n\n  }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './_services';\nimport { User } from './_models';\n\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\nexport class AppComponent {\n    currentUser: User;\n\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    }\n\n    logout() {\n        this.authenticationService.logout();\n        this.router.navigate(['/login']);\n    }\n}","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\n\nimport {AppComponent} from './app.component';\nimport {appRoutingModule} from './app.routing';\n\nimport {JwtInterceptor, ErrorInterceptor} from './_helpers';\nimport {\n  EditComponent as EditProductComponent,\n  ListComponent as ListProductComponent,\n  ViewComponent as ViewProductComponent,\n  CreateComponent as CreateProductComponent\n} from './product';\nimport {LoginComponent} from './login';\nimport {SignupComponent} from '@app/signup/signup.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    appRoutingModule\n  ],\n  declarations: [\n    AppComponent,\n    EditProductComponent,\n    ListProductComponent,\n    ViewProductComponent,\n    CreateProductComponent,\n    LoginComponent,\n    SignupComponent\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Routes, RouterModule } from '@angular/router';\n\nimport {EditComponent as EditProductComponent, ListComponent as ListProductComponent, ViewComponent as ViewProductComponent, CreateComponent as CreateProductComponent} from './product';\nimport { LoginComponent } from './login';\nimport { AuthGuard } from './_helpers';\nimport {SignupComponent} from '@app/signup';\n\nconst routes: Routes = [\n    { path: 'listProducts', component: ListProductComponent, canActivate: [AuthGuard] },\n    { path: '', component: ListProductComponent, canActivate: [AuthGuard] },\n    { path: 'editProduct/:id', component: EditProductComponent, canActivate: [AuthGuard] },\n    { path: 'viewProduct/:id', component: ViewProductComponent, canActivate: [AuthGuard] },\n    { path: 'createProduct', component: CreateProductComponent, canActivate: [AuthGuard] },\n    { path: 'login', component: LoginComponent },\n    { path: 'signup', component: SignupComponent },\n\n    // otherwise redirect to home\n    { path: '**', redirectTo: '' }\n];\n\nexport const appRoutingModule = RouterModule.forRoot(routes);\n","export * from './login.component';","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '@app/_services';\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { \n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) { \n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    this.error = error;\n                    this.loading = false;\n                });\n    }\n}\n","import { Component } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { Product } from '@app/_models';\nimport { ProductService, AuthenticationService } from '@app/_services';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({ templateUrl: 'create.component.html' })\nexport class CreateComponent {\n  productForm: FormGroup;\n  loading = false;\n  submitted = false;\n  product: Product;\n  error = '';\n\n    constructor( private formBuilder: FormBuilder,\n                 private route: ActivatedRoute,\n                 private router: Router,private productService: ProductService) { }\n\n\n  ngOnInit() {\n    this.productForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      type: ['', Validators.required],\n      price: ['', Validators.required],\n      status: ['', Validators.required]\n\n    });\n  }\n\n\n\n  // convenience getter for easy access to form fields\n  get f() { return this.productForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.productForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    console.log(this.productForm.value)\n    this.productService.create(this.productForm.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n         this.router.navigate(['/listProducts']);\n        },\n        error => {\n          this.error = error;\n          this.loading = false;\n        });\n  }\n\n}\n","export * from './create.component';\n","import {Component} from '@angular/core';\nimport {first} from 'rxjs/operators';\n\nimport {Product} from '@app/_models';\nimport {ProductService, AuthenticationService} from '@app/_services';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({templateUrl: 'edit.component.html'})\nexport class EditComponent {\n  productForm: FormGroup;\n  loading = false;\n  submitted = false;\n  product: Product;\n  error = '';\n  currentId = '';\n\n  constructor(private formBuilder: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router, private productService: ProductService) {\n    this.productForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      type: ['', Validators.required],\n      price: ['', Validators.required],\n      status: ['', Validators.required]\n\n    });\n  }\n\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.productForm.controls;\n  }\n\n  ngOnInit() {\n\n\n    this.route.params.subscribe(params => {\n\n      this.currentId = params['id'];\n\n      this.loading = true;\n      this.productService.get(this.currentId).subscribe(products => {\n        this.loading = false;\n        this.product = products;\n\n        this.f.name.setValue(products['name']);\n        this.f.description.setValue(products['description']);\n        this.f.type.setValue(products['type']);\n        this.f.price.setValue(products['price']);\n        this.f.status.setValue(products['status']);\n\n\n      });\n\n    });\n  }\n\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.productForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    console.log(this.productForm.value)\n    this.productService.update(this.currentId, this.productForm.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.router.navigate(['/listProducts']);\n        },\n        error => {\n          this.error = error;\n          this.loading = false;\n        });\n  }\n\n}\n","export * from './edit.component';\n","export * from './list';\nexport * from './create';\nexport * from './edit';\nexport * from './view';\n","export * from './list.component';\n","import {Component} from '@angular/core';\nimport {first} from 'rxjs/operators';\n\nimport {Product} from '@app/_models';\nimport {ProductService, AuthenticationService} from '@app/_services';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({templateUrl: 'list.component.html'})\nexport class ListComponent {\n  loading = false;\n  products: Product[];\n\n  constructor(private route: ActivatedRoute,\n              private router: Router, private productService: ProductService) {\n  }\n\n  ngOnInit() {\n    this.loading = true;\n    this.productService.getAll().pipe(first()).subscribe(products => {\n      this.loading = false;\n      this.products = products;\n    });\n  }\n\n\n  editProduct(id) {\n    this.router.navigate(['/editProduct/'+id]);\n  }\n\n  viewProduct(id) {\n    console.log(id)\n    this.router.navigate(['/viewProduct/'+id]);\n  }\n\n  deleteProduct(id) {\n    this.productService.delete(id).subscribe(products => {\n      this.loading = false;\n      this.router.navigate(['/listProducts']);\n\n    });\n  }\n}\n","export * from './view.component';\n","import { Component } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { Product } from '@app/_models';\nimport { ProductService, AuthenticationService } from '@app/_services';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({ templateUrl: 'view.component.html' })\nexport class ViewComponent {\n    loading = false;\n  currentId:number;\n\n  product: Product;\n\n    constructor(private route: ActivatedRoute,\n                private router: Router,private productService: ProductService) { }\n\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n\n        this.currentId = params['id'];\n\n        this.loading = true;\n        this.productService.get(this.currentId).subscribe(products => {\n          this.loading = false;\n          this.product = products;\n          console.log(products)\n\n        });\n\n      });\n\n    }\n\n\n    deleteProduct(id){\n      this.productService.delete(id).subscribe(products => {\n        this.loading = false;\n        this.router.navigate(['/listProducts']);\n\n      });\n    }\n}\n","export * from './signup.component';\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '@app/_services';\n\n@Component({ templateUrl: 'signup.component.html' })\nexport class SignupComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n\n    }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            email: ['', Validators.required],\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.signup(this.f.email.value,this.f.username.value, this.f.password.value)\n            .subscribe(\n                data => {\n                    this.router.navigate(['login']);\n                },\n                error => {\n                    this.error = error;\n                    this.loading = false;\n                });\n    }\n}\n","\n\nexport const environment = {\n    production: false,\n    apiUrl: 'http://localhost:8080'\n};\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n"],"sourceRoot":""}